In computer science, a priority queue is an abstract data type which is like a regular queue, but where additionally each element has a "priority" associated with it. In a priority queue,
an element with high priority is served before an element with low priority.



import java.io.*; 
import java.util.*;
import java.text.*;
import java.math.*; 
import java.util.regex.*;
class Student{
    int token;
   
    String name;
    double cgpa;
    Student(int id,String name,double cgpa){
        this.token=id;
        this.name=name;
        this.cgpa=cgpa;
    }
    
    public int getToken(){
        return token;
    }
      public String  getName(){
        return name;
    }
      public double getCgpa(){
        return cgpa;
    }
}

class Priorities {
   	public List < Student > getStudents(List < String > events) {
		PriorityQueue < Student > student_queue = new PriorityQueue(Comparator.comparing(Student::getCgpa).reversed().thenComparing(Student::getName).thenComparing(Student::getToken));
		List < Student > students = new ArrayList < Student > ();
		for (String e: events) {
			Scanner in =new Scanner(e);
			String event = in.next();
			if (event.equals("ENTER")) {
				String name = in.next();
				float cgpa = in.nextFloat();
				int token = in.nextInt();

				Student student = new Student(token, name, cgpa);
				student_queue.add(student);
			} else if (event.equals("SERVED")) {
				Student first = student_queue.poll();
			} in .close();
		}
		Student first = student_queue.poll();
		if (first == null) {
			return students;
		} else {
			while (first != null) {

				students.add(first);
				first = student_queue.poll();

			}
			return students;
		}

	}    
}
