Java allows for Covariant Return Types, which means you can vary your return type as long you are returning a subclass of your specified return type.

Method Overriding allows a subclass to override the behavior of an existing superclass method and specify a return type that is some subclass of the original return type. 
It is best practice to use the @Override annotation when overriding a superclass method.



class Flower{
    public String whatsYourName(){
        return "I have many names and types";
    }
}

class Jasmine extends Flower{
       public String whatsYourName(){
        return "Jasmine";
    }
    
}
class Lily extends Flower{
       public String whatsYourName(){
        return "Lily";
    }
    
}
class Lotus extends Flower{
       public String whatsYourName(){
        return "Lotus";
    }
    
}

class State {
       public Flower yourNationalFlower(){
        return new Flower();
    }
    
}
class WestBengal extends State{
          public Jasmine yourNationalFlower(){
        return new Jasmine();
    }
    
}
class Karnataka extends State{
         public Lotus yourNationalFlower(){
        return new Lotus();
    }
    
}
class AndhraPradesh extends State{
           public Lily yourNationalFlower(){
        return new Lily();
    }
    
}
